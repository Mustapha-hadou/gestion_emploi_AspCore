// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication3.Data;

namespace miniPrpject_Asp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210628184515_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("miniPrpject_Asp.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom");

                    b.Property<string>("Password");

                    b.Property<string>("Prenom");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Annee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom");

                    b.Property<string>("StartDate");

                    b.Property<string>("StartEnd");

                    b.HasKey("Id");

                    b.ToTable("Annees");
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Classe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FiliereID");

                    b.Property<string>("NomClasse");

                    b.Property<string>("code");

                    b.HasKey("Id");

                    b.HasIndex("FiliereID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Cours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClasseID");

                    b.Property<string>("Groupe");

                    b.Property<string>("Nom");

                    b.Property<int>("ProfesseurID");

                    b.HasKey("Id");

                    b.HasIndex("ClasseID");

                    b.HasIndex("ProfesseurID");

                    b.ToTable("Cours");
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.DetailEmploi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoursID");

                    b.Property<int>("EmploiID");

                    b.Property<int>("LocalID");

                    b.Property<int>("SeanceID");

                    b.HasKey("Id");

                    b.HasIndex("CoursID");

                    b.HasIndex("EmploiID");

                    b.HasIndex("LocalID");

                    b.HasIndex("SeanceID");

                    b.ToTable("DetailEmplois");
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Emploi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnneeID");

                    b.Property<int>("SemaineID");

                    b.Property<int>("id_niveau");

                    b.Property<string>("startDate");

                    b.Property<string>("startEnd");

                    b.Property<int>("valide");

                    b.HasKey("Id");

                    b.HasIndex("AnneeID");

                    b.HasIndex("SemaineID");

                    b.ToTable("Emplois");
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Filiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom");

                    b.HasKey("Id");

                    b.ToTable("Filieres");
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacite");

                    b.Property<string>("Nom");

                    b.Property<int>("TypeLocal");

                    b.Property<int>("localisation");

                    b.HasKey("Id");

                    b.ToTable("Locals");
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Professeur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom");

                    b.Property<string>("Password");

                    b.Property<string>("Prenom");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Professeurs");
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Seance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HeurDebut");

                    b.Property<string>("HeurFin");

                    b.Property<string>("jour");

                    b.HasKey("Id");

                    b.ToTable("Seances");
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Semaine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomSemaine");

                    b.HasKey("Id");

                    b.ToTable("Semaines");
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Classe", b =>
                {
                    b.HasOne("miniPrpject_Asp.Models.Filiere", "Filiere")
                        .WithMany("LClasse")
                        .HasForeignKey("FiliereID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Cours", b =>
                {
                    b.HasOne("miniPrpject_Asp.Models.Classe", "Classe")
                        .WithMany()
                        .HasForeignKey("ClasseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("miniPrpject_Asp.Models.Professeur", "Professeur")
                        .WithMany("LCours")
                        .HasForeignKey("ProfesseurID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.DetailEmploi", b =>
                {
                    b.HasOne("miniPrpject_Asp.Models.Cours", "Cours")
                        .WithMany("LDE")
                        .HasForeignKey("CoursID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("miniPrpject_Asp.Models.Emploi", "Emploi")
                        .WithMany("LDE")
                        .HasForeignKey("EmploiID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("miniPrpject_Asp.Models.Local", "Local")
                        .WithMany("ListeDE")
                        .HasForeignKey("LocalID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("miniPrpject_Asp.Models.Seance", "Seance")
                        .WithMany("LDE")
                        .HasForeignKey("SeanceID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("miniPrpject_Asp.Models.Emploi", b =>
                {
                    b.HasOne("miniPrpject_Asp.Models.Annee", "Annee")
                        .WithMany("LEmplois")
                        .HasForeignKey("AnneeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("miniPrpject_Asp.Models.Semaine", "Semaine")
                        .WithMany("LEmplois")
                        .HasForeignKey("SemaineID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
